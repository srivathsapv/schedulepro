/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package schedulepro;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author srivathsa
 */
public class EquipmentViewForm extends javax.swing.JFrame {

    /**
     * Creates new form EquipmentView
     */
    public EquipmentViewForm() throws SQLException {
        initComponents();
        jTable1.setModel(new EquipmentTableModel());
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                DashboardForm df = new DashboardForm();
                Utilfunctions.setIconImage(df);
                Utilfunctions.setLocation(df);
                e.getWindow().setVisible(false);
                df.setVisible(true);

            }
        });
    }
    
    public JTextField getEditTextBox(){        
        JTextField editField = new JTextField();
        return editField;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jMenuItem5.setText("Book");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem5);

        jMenuItem6.setText("View Booking Details");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem6);

        jMenuItem1.setText("Edit Equipment");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        jMenuItem2.setText("Increase Quantity");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem2);

        jMenuItem3.setText("Decrease Quantity");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem3);

        jMenuItem4.setText("Delete");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem4);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("SchedulePro - View Equipments");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Equipments");

        jTable1.setColumnSelectionAllowed(true);
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTable1.setInheritsPopupMenu(true);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.setShowHorizontalLines(false);
        jTable1.setShowVerticalLines(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(179, 179, 179)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(104, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(81, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        String str = JOptionPane.showInputDialog("Equipment Name",jTable1.getValueAt(selectedRow,1));
        jTable1.setValueAt(str,selectedRow,1);
        Utilfunctions.executeUpdate("UPDATE equipment SET equipName = '" + str + "' WHERE equipId = '" + jTable1.getValueAt(selectedRow,0) + "'");
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        // TODO add your handling code here:
        if(SwingUtilities.isRightMouseButton(evt)) {
            JTable source = (JTable)evt.getSource();
            selectedRow = source.rowAtPoint( evt.getPoint() );
            selectedColumn = source.columnAtPoint( evt.getPoint() );
            
            if (! source.isRowSelected(selectedRow))
                source.changeSelection(selectedRow, selectedColumn, false, false);
            
            jPopupMenu1.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jTable1MouseReleased

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        int q = Integer.parseInt(jTable1.getValueAt(selectedRow,2).toString());
        q++;
        String str = Integer.toString(q);
        jTable1.setValueAt(str,selectedRow,2);
        Utilfunctions.executeUpdate("UPDATE equipment SET quantity = quantity + 1 WHERE equipId = '" + jTable1.getValueAt(selectedRow,0) + "'"); 
        jTable1.changeSelection(selectedRow, 2, false, false);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        int q = Integer.parseInt(jTable1.getValueAt(selectedRow,2).toString());
        if(q == 1){
            JOptionPane.showMessageDialog(null,"Equipment quantity cannot be zero");
            return;
        }
        q--;
        String str = Integer.toString(q);
        jTable1.setValueAt(str,selectedRow,2);
        Utilfunctions.executeUpdate("UPDATE equipment SET quantity = quantity - 1 WHERE equipId = '" + jTable1.getValueAt(selectedRow,0) + "'"); 
        jTable1.changeSelection(selectedRow, 2, false, false);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        int opt = JOptionPane.showConfirmDialog(null,"Are you sure you want to delete this equipment?","Delete Equipment",JOptionPane.YES_NO_OPTION);
        if(opt == JOptionPane.YES_OPTION){
            Utilfunctions.executeUpdate("DELETE FROM equipment WHERE equipId = '" + jTable1.getValueAt(selectedRow,0) + "'");
            EquipmentTableModel model = (EquipmentTableModel)jTable1.getModel();
            model.removeRow(selectedRow);
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        EquipmentIssueForm eif = new EquipmentIssueForm();
        Utilfunctions.setIconImage(eif);
        Utilfunctions.setLocation(eif);
        
        EquipmentTableModel emodel = (EquipmentTableModel)jTable1.getModel();
        EquipmentIssueForm.chosenEquipId = emodel.getEquipId(selectedRow);
        
        eif.setVisible(true);
        
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        GlobalVars.equipmentId=Integer.parseInt(jTable1.getValueAt(selectedRow,0).toString());
        ViewBookingDetailsForm vb = null;
        try {
            vb = new ViewBookingDetailsForm();
            Utilfunctions.setIconImage(vb);
            Utilfunctions.setLocation(vb);
        } catch (SQLException ex) {
            Logger.getLogger(EquipmentViewForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        vb.setVisible(true);
    }//GEN-LAST:event_jMenuItem6ActionPerformed
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EquipmentViewForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EquipmentViewForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EquipmentViewForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EquipmentViewForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    new EquipmentViewForm().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(EquipmentViewForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    private int selectedRow;
    private int selectedColumn;
}

class EquipmentTableModel extends AbstractTableModel {
    private String[] columnNames = {"Equipment ID","Equipment Name"};
    
    private Vector<String[]> data;
    
    private int[] equipId;
    
    public EquipmentTableModel() throws SQLException{
        ResultSet rs_cnt = Utilfunctions.executeQuery("SELECT COUNT(*) FROM equipment WHERE dept = '" + LoginForm.userDept + "'");
        rs_cnt.next();
        int cnt = rs_cnt.getInt(1);
        String query = "SELECT equipId,equipName FROM equipment WHERE dept = '" + LoginForm.userDept + "'";
        ResultSet rs = Utilfunctions.executeQuery(query);
        data = new Vector<String[]>();
        equipId = new int[cnt];
        
        int i=0;
        while(rs.next()){
            String[] values = {rs.getString(1),rs.getString(2)};
            data.add(values);
            equipId[i++] = Integer.parseInt(rs.getString(1));
        }
    }

    @Override
    public int getColumnCount() {
        return columnNames.length;
    }

    @Override
    public int getRowCount() {
        return data.size();
    }

    @Override
    public String getColumnName(int col) {
        return columnNames[col];
    }

    @Override
    public Object getValueAt(int row, int col) {
        return data.get(row)[col];
    }

    @Override
    public Class getColumnClass(int c) {
        return getValueAt(0, c).getClass();
        
    }
    
    @Override
    public void setValueAt(Object value,int row,int column){
        String values[] = data.get(row);
        values[column] = value.toString();
        data.setElementAt(values, row);
    }
    
    public void removeRow(int row){
        data.remove(row);
        for(int i=0;i<data.size();i++){
            System.out.println(data.get(i));
        }
        this.fireTableDataChanged();
    }
    
    public int getEquipId(int row){
        return equipId[row];
    }
}